#!/bin/sh

# Check for standalone time
TIME="$(which time 2>/dev/null)"
++ which time
+ TIME=/usr/bin/time
if [ -z "$TIME" ]; then
	echo "Failed to find standalone time executable"
	exit
fi
+ '[' -z /usr/bin/time ']'

# Check for C Compiler
if [ -n "${CC}" ]; then
	# CC=${CC} # why are you assigning $CC to itsself
	: # Do nothing, since $CC was defined
elif [ -n "$(which clang 2>/dev/null)" ]; then
	CC=clang
elif [ -n "$(which gcc 2>/dev/null)" ]; then
	CC=gcc
elif [ -n "$(which cc 2>/dev/null)" ]; then
	CC=cc
fi
+ '[' -n '' ']'
++ which clang
+ '[' -n '' ']'
++ which gcc
+ '[' -n /usr/bin/gcc ']'
+ CC=gcc

if [ -n "${CC}" ]; then
	CPROG=getshells-c
	CPROG_HYPER="./getshells-c -n C"
	${CC} -O3 getshells.c -o ${CPROG}
else
	echo "C Compiler not found."
fi
+ '[' -n gcc ']'
+ CPROG=getshells-c
+ CPROG_HYPER='./getshells-c -n C'
+ gcc -O3 getshells.c -o getshells-c

# Check for rust compiler
if [ -n "$(which cargo 2>/dev/null)" ]; then
	RSPROG="release/getshells"
	RSPROG_HYPER="./release/getshells -n Rust"
	cd "getshells_rust" || echo "getshells_rust folder not found"
	cargo build --release --all-features --target-dir ..
	cd ".."
else
	echo "cargo was not f ound"
fi
++ which cargo
+ '[' -n /usr/bin/cargo ']'
+ RSPROG=release/getshells
+ RSPROG_HYPER='./release/getshells -n Rust'
+ cd getshells_rust
+ cargo build --release --all-features --target-dir ..
    Finished release [optimized] target(s) in 0.01s
+ cd ..

# Check for golang compiler
if [ -n "$(which go 2>/dev/null)" ]; then # literal string will always return true value
	GOPROG=getshells-go
	GOPROG_HYPER="./getshells-go -n Go"
	go build getshells.go
	mv getshells ${GOPROG}
else
	echo "Golang compiler not found."
fi
++ which go
+ '[' -n /usr/bin/go ']'
+ GOPROG=getshells-go
+ GOPROG_HYPER='./getshells-go -n Go'
+ go build getshells.go
+ mv getshells getshells-go

# Check for Powershell
if [ -n "$(which pwsh 2>/dev/null)" ]; then
	PSHELL=getshells.ps1
	PSHELL_HYPER="./getshells.ps1 -n PowerShell"
else
	echo "Powershell not found."
fi
++ which pwsh
+ '[' -n /usr/bin/pwsh ']'
+ PSHELL=getshells.ps1
+ PSHELL_HYPER='./getshells.ps1 -n PowerShell'

# Check for php
if [ -n "$(which php 2>/dev/null)" ]; then
	PHP=getshells.php
	PHP_HYPER="./getshells.awk -n PHP"
else
	echo "PHP not found."
fi
++ which php
+ '[' -n /usr/bin/php ']'
+ PHP=getshells.php
+ PHP_HYPER='./getshells.awk -n PHP'

# Check for awk
if [ -n "$(which awk 2>/dev/null)" ]; then
	AWK=getshells.awk
	AWK_HYPER="./getshells.awk -n Awk"
else
	echo "Awk not found."
fi
++ which awk
+ '[' -n /usr/bin/awk ']'
+ AWK=getshells.awk
+ AWK_HYPER='./getshells.awk -n Awk'

if [ -n "$(which python3 2>/dev/null)" ]; then
	PYPROG=getshells.py
	PYPROG_HYPER="./getshells.py -n Python"
else
	echo "Python3 not found."
fi
++ which python3
+ '[' -n /usr/bin/python3 ']'
+ PYPROG=getshells.py
+ PYPROG_HYPER='./getshells.py -n Python'

if [ -n "$(which perl 2>/dev/null)" ]; then
	PLPROG=getshells.pl
	PLPROG_HYPER="./getshells.pl -n Perl"
else
	echo "Perl not found."
fi
++ which perl
+ '[' -n /usr/bin/perl ']'
+ PLPROG=getshells.pl
+ PLPROG_HYPER='./getshells.pl -n Perl'

if [ -n "$(which sbcl 2>/dev/null)" ]; then
	LISPPROG=getshells.lisp
	LISPPROG_HYPER="./getshells.lisp -n LISP"
else
	echo "SBCL (Lisp) not found."
fi
++ which sbcl
+ '[' -n /usr/bin/sbcl ']'
+ LISPPROG=getshells.lisp
+ LISPPROG_HYPER='./getshells.lisp -n LISP'

if [ -n "$(which node 2>/dev/null)" ]; then
	NODEPROG=getshells.js
	NODEPROG_HYPER="./getshells.js -n Node"
else
	echo "NodeJS not found."
fi
++ which node
+ '[' -n /usr/bin/node ']'
+ NODEPROG=getshells.js
+ NODEPROG_HYPER='./getshells.js -n Node'

if [ -n "$(which julia 2>/dev/null)" ]; then
	JLPROG=getshells.jl
	JLPROG_HYPER="./getshells.jl -n Julia"
else
	echo "Julia not found."
fi
++ which julia
+ '[' -n '' ']'
+ echo 'Julia not found.'
Julia not found.

if [ -n "$(which ruby 2>/dev/null)" ]; then
	RBPROG=getshells.rb
	RBPROG_HYPER="./getshells.rb -n Ruby"
else
	echo "Ruby not found."
fi
++ which ruby
+ '[' -n /usr/bin/ruby ']'
+ RBPROG=getshells.rb
+ RBPROG_HYPER='./getshells.rb -n Ruby'

if [ -n "$(which crystal 2>/dev/null)" ]; then
	CRPROG=getshells-cr
	CRPROG_HYPER="./getshells-cr Crystal"
	crystal build --release getshells.cr
	mv getshells ./${CRPROG}
else
	echo "Crystal-lang not found."
fi
++ which crystal
+ '[' -n /usr/bin/crystal ']'
+ CRPROG=getshells-cr
+ CRPROG_HYPER='./getshells-cr Crystal'
+ crystal build --release getshells.cr
+ mv getshells ./getshells-cr

# Check for Lua
if [ -n "$(which lua 2>/dev/null)" ]; then
	LUA=getshells.lua
	LUA_HYPER="./getshells.lua -n Lua"
else
	echo "Lua not found."
fi
++ which lua
+ '[' -n /usr/bin/lua ']'
+ LUA=getshells.lua
+ LUA_HYPER='./getshells.lua -n Lua'

# Check for LuaJIT
if [ -n "$(which luajit 2>/dev/null)" ]; then
	LUA=getshells.luajit
	LUA_HYPER="./getshells.luajit -n LuaJIT"
else
	echo "LuaJIT not found."
fi
++ which luajit
+ '[' -n /usr/bin/luajit ']'
+ LUA=getshells.luajit
+ LUA_HYPER='./getshells.luajit -n LuaJIT'

LIST="${LUA} ${CPROG} ${RSPROG} ${GOPROG} ${NODEPROG} ${PYPROG} ${PLPROG} ${JLPROG} ${LISPPROG} ${RBPROG} ${AWK} ${CRPROG} ${PSHELL} ${PHP}"
+ LIST='getshells.luajit getshells-c release/getshells getshells-go getshells.js getshells.py getshells.pl  getshells.lisp getshells.rb getshells.awk getshells-cr getshells.ps1 getshells.php'
LIST_HYPER="${LUA_HYPER} ${CPROG_HYPER} ${RSPROG_HYPER} ${GOPROG_HYPER} ${NODEPROG_HYPER} ${PYPROG_HYPER} ${PLPROG_HYPER} ${JLPROG_HYPER} ${LISPPROG_HYPER} ${RBPROG_HYPER} ${AWK_HYPER} ${CRPROG_HYPER} ${PSHELL_HYPER} ${PHP_HYPER}"
+ LIST_HYPER='./getshells.luajit -n LuaJIT ./getshells-c -n C ./release/getshells -n Rust ./getshells-go -n Go ./getshells.js -n Node ./getshells.py -n Python ./getshells.pl -n Perl  ./getshells.lisp -n LISP ./getshells.rb -n Ruby ./getshells.awk -n Awk ./getshells-cr Crystal ./getshells.ps1 -n PowerShell ./getshells.awk -n PHP'

if [ -n "$(which hyperfine 2>/dev/null)" ]; then
	echo "Found hyperfine, using it to benchmark"

	hyperfine $LIST_HYPER
else
	echo "Hyperfine not found, using rudimentary benchmarking"

	for i in ${CPROG} ${RSPROG} ${GOPROG} ${NODEPROG} ${PYPROG} ${PLPROG} ${JLPROG} ${LISPPROG} ${RBPROG} ${AWK} ${CRPROG} ${PHP} ${PSHELL}; do
		echo "################################################"
		echo "$i"
		$TIME -f "%E\nMax memory usage: %MK" "./${i}"
	done
fi
++ which hyperfine
+ '[' -n '' ']'
+ echo 'Hyperfine not found, using rudimentary benchmarking'
Hyperfine not found, using rudimentary benchmarking
+ for i in ${CPROG} ${RSPROG} ${GOPROG} ${NODEPROG} ${PYPROG} ${PLPROG} ${JLPROG} ${LISPPROG} ${RBPROG} ${AWK} ${CRPROG} ${PHP} ${PSHELL}
+ echo '################################################'
################################################
+ echo getshells-c
getshells-c
+ /usr/bin/time -f '%E\nMax memory usage: %MK' ./getshells-c
/bin/bash         :	22402
/usr/sbin/nologin :	433839
/bin/sync         :	11201
/bin/false        :	45804
0:00.05
Max memory usage: 1280K
+ for i in ${CPROG} ${RSPROG} ${GOPROG} ${NODEPROG} ${PYPROG} ${PLPROG} ${JLPROG} ${LISPPROG} ${RBPROG} ${AWK} ${CRPROG} ${PHP} ${PSHELL}
+ echo '################################################'
################################################
+ echo release/getshells
release/getshells
+ /usr/bin/time -f '%E\nMax memory usage: %MK' ./release/getshells
/bin/false: 45804
/bin/sync: 11201
/usr/sbin/nologin: 433839
/bin/bash: 22402
0:00.10
Max memory usage: 1920K
+ for i in ${CPROG} ${RSPROG} ${GOPROG} ${NODEPROG} ${PYPROG} ${PLPROG} ${JLPROG} ${LISPPROG} ${RBPROG} ${AWK} ${CRPROG} ${PHP} ${PSHELL}
+ echo '################################################'
################################################
+ echo getshells-go
getshells-go
+ /usr/bin/time -f '%E\nMax memory usage: %MK' ./getshells-go
/bin/bash:	22402
/usr/sbin/nologin:	433839
/bin/sync:	11201
/bin/false:	45804
0:00.19
Max memory usage: 7128K
+ for i in ${CPROG} ${RSPROG} ${GOPROG} ${NODEPROG} ${PYPROG} ${PLPROG} ${JLPROG} ${LISPPROG} ${RBPROG} ${AWK} ${CRPROG} ${PHP} ${PSHELL}
+ echo '################################################'
################################################
+ echo getshells.js
getshells.js
+ /usr/bin/time -f '%E\nMax memory usage: %MK' ./getshells.js
/bin/bash	:	22402
/usr/sbin/nologin	:	433839
/bin/sync	:	11201
/bin/false	:	45804
0:00.32
Max memory usage: 52052K
+ for i in ${CPROG} ${RSPROG} ${GOPROG} ${NODEPROG} ${PYPROG} ${PLPROG} ${JLPROG} ${LISPPROG} ${RBPROG} ${AWK} ${CRPROG} ${PHP} ${PSHELL}
+ echo '################################################'
################################################
+ echo getshells.py
getshells.py
+ /usr/bin/time -f '%E\nMax memory usage: %MK' ./getshells.py
/bin/bash          22402
/bin/false         45804
/bin/sync          11201
/usr/sbin/nologin  433839
0:00.34
Max memory usage: 71040K
+ for i in ${CPROG} ${RSPROG} ${GOPROG} ${NODEPROG} ${PYPROG} ${PLPROG} ${JLPROG} ${LISPPROG} ${RBPROG} ${AWK} ${CRPROG} ${PHP} ${PSHELL}
+ echo '################################################'
################################################
+ echo getshells.pl
getshells.pl
+ /usr/bin/time -f '%E\nMax memory usage: %MK' ./getshells.pl
/bin/bash         :	22402
/bin/false        :	45804
/bin/sync         :	11201
/usr/sbin/nologin :	433839
0:00.56
Max memory usage: 5504K
+ for i in ${CPROG} ${RSPROG} ${GOPROG} ${NODEPROG} ${PYPROG} ${PLPROG} ${JLPROG} ${LISPPROG} ${RBPROG} ${AWK} ${CRPROG} ${PHP} ${PSHELL}
+ echo '################################################'
################################################
+ echo getshells.lisp
getshells.lisp
+ /usr/bin/time -f '%E\nMax memory usage: %MK' ./getshells.lisp
/bin/bash : 22402
/usr/sbin/nologin : 433839
/bin/sync : 11201
/bin/false : 45804
0:00.59
Max memory usage: 139520K
+ for i in ${CPROG} ${RSPROG} ${GOPROG} ${NODEPROG} ${PYPROG} ${PLPROG} ${JLPROG} ${LISPPROG} ${RBPROG} ${AWK} ${CRPROG} ${PHP} ${PSHELL}
+ echo '################################################'
################################################
+ echo getshells.rb
getshells.rb
+ /usr/bin/time -f '%E\nMax memory usage: %MK' ./getshells.rb
/bin/bash           :       22402
/usr/sbin/nologin   :       433839
/bin/sync           :       11201
/bin/false          :       45804
0:01.32
Max memory usage: 13696K
+ for i in ${CPROG} ${RSPROG} ${GOPROG} ${NODEPROG} ${PYPROG} ${PLPROG} ${JLPROG} ${LISPPROG} ${RBPROG} ${AWK} ${CRPROG} ${PHP} ${PSHELL}
+ echo '################################################'
################################################
+ echo getshells.awk
getshells.awk
+ /usr/bin/time -f '%E\nMax memory usage: %MK' ./getshells.awk
/usr/sbin/nologin :	433839
/bin/false        :	45804
/bin/bash         :	22402
/bin/sync         :	11201
0:01.09
Max memory usage: 8960K
+ for i in ${CPROG} ${RSPROG} ${GOPROG} ${NODEPROG} ${PYPROG} ${PLPROG} ${JLPROG} ${LISPPROG} ${RBPROG} ${AWK} ${CRPROG} ${PHP} ${PSHELL}
+ echo '################################################'
################################################
+ echo getshells-cr
getshells-cr
+ /usr/bin/time -f '%E\nMax memory usage: %MK' ./getshells-cr
/bin/bash           :       22402
/usr/sbin/nologin   :       433839
/bin/sync           :       11201
/bin/false          :       45804
0:00.35
Max memory usage: 2688K
+ for i in ${CPROG} ${RSPROG} ${GOPROG} ${NODEPROG} ${PYPROG} ${PLPROG} ${JLPROG} ${LISPPROG} ${RBPROG} ${AWK} ${CRPROG} ${PHP} ${PSHELL}
+ echo '################################################'
################################################
+ echo getshells.php
getshells.php
+ /usr/bin/time -f '%E\nMax memory usage: %MK' ./getshells.php

/bin/bash: 22402
/usr/sbin/nologin: 433839
/bin/sync: 11201
/bin/false: 45804
 

0:00.14
Max memory usage: 17784K
+ for i in ${CPROG} ${RSPROG} ${GOPROG} ${NODEPROG} ${PYPROG} ${PLPROG} ${JLPROG} ${LISPPROG} ${RBPROG} ${AWK} ${CRPROG} ${PHP} ${PSHELL}
+ echo '################################################'
################################################
+ echo getshells.ps1
getshells.ps1
+ /usr/bin/time -f '%E\nMax memory usage: %MK' ./getshells.ps1

[32;1mName                           Value[0m
[32;1m----                           -----[0m
/bin/sync                      11201
/bin/false                     45804
/bin/bash                      22402
/usr/sbin/nologin              433839

0:20.98
Max memory usage: 951836K
